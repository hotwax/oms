<secas xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-eca-3.xsd">
    <!-- FIXME: This should be done using the DataFeed flow-->
    <seca id="ProcessOrderItemAllocation" service="co.hotwax.oms.impl.OrderReservationServices.process#OrderItemAllocation" when="tx-commit">
        <condition><expression>allocatedShipGroupSeqId</expression></condition>
        <actions>
            <service-call name="co.hotwax.oms.search.SearchServices.index#OrderItem" in-map="[orderId:orderId, orderItemSeqId: orderItemSeqId]"
                    ignore-error="true" />
            <service-call name="co.hotwax.oms.search.SearchServices.index#Reservation" in-map="[orderId:orderId, orderItemSeqId: orderItemSeqId]"
                          ignore-error="true" />
        </actions>
    </seca>
    <seca id="CancelReservation" service="delete#org.apache.ofbiz.order.order.OrderItemShipGrpInvRes" when="tx-commit">
        <actions>
            <service-call name="co.hotwax.oms.search.SearchServices.update#OISGIRIFulfillmentStatus"
                          in-map="context"
                          ignore-error="true" />
        </actions>
    </seca>

    <seca service="co.hotwax.oms.impl.FulfillmentOrderServices.create#FulfillmentOrderIssuance" when="tx-commit">
        <actions>
            <iterate list="issuedOrderItems" entry="item">
                <service-call name="co.hotwax.oms.search.SearchServices.index#OrderItem"
                      in-map="[orderId:item.orderId, orderItemSeqId: item.orderItemSeqId]"
                      ignore-error="true" />
            </iterate>
        </actions>
    </seca>
    <seca id="OrderItemStatusChange" service="update#org.apache.ofbiz.order.order.OrderItem" when="tx-commit">
        <condition><expression>statusChanged</expression></condition>
        <actions>
            <service-call name="co.hotwax.oms.search.SearchServices.index#OrderItem" in-map="[orderId:orderId, orderItemSeqId: orderItemSeqId]"
                          ignore-error="true" />
        </actions>
    </seca>
    <seca id="OrderItemCompleted" service="update#org.apache.ofbiz.order.order.OrderItem" when="post-commit">
        <condition>
            <expression>statusChanged &amp;&amp; statusId == 'ITEM_COMPLETED'</expression>
        </condition>
        <actions>
            <service-call name="co.hotwax.oms.order.OrderServices.delete#OrderItemReservations" in-map="[orderId:orderId, orderItemSeqId: orderItemSeqId]"
                          ignore-error="true" disable-authz="true"/>
        </actions>
    </seca>

    <!-- Seca rule on order Complete to generate generic order feed for other ERP system -->
    <seca id="OrderStatusChange" service="update#org.apache.ofbiz.order.order.OrderHeader" when="tx-commit">
        <condition>
            <expression>statusChanged &amp;&amp; statusId == 'ORDER_COMPLETED'</expression>
        </condition>
        <actions>
            <service-call name="co.hotwax.oms.order.OrderServices.send#OrderWebhook" in-map="[orderId:orderId,topicEnumId:'WEBHOOK_ODR_COMPLETE']" async="true" disable-authz="true"/>
        </actions>
    </seca>
    <seca id="SendCancellationEmail" service="co.hotwax.orderledger.order.OrderServices.cancel#SalesOrderItem" when="tx-commit">
        <condition>
            <expression>orderId &amp;&amp; shipGroupSeqId</expression>
        </condition>
        <actions>
            <entity-find-one entity-name="org.apache.ofbiz.order.order.OrderItemShipGroup" value-field="orderItemShipGroup">
                <field-map field-name="orderId"/>
                <field-map field-name="shipGroupSeqId"/>
            </entity-find-one>
            <if condition="orderItemShipGroup.shipmentMethodTypeId != 'STOREPICKUP'">
                <return/>
            </if>
            <set field="emailType" value="CANCEL_BOPIS_ORDER"/>
            <service-call name="co.hotwax.orderledger.order.OrderServices.send#EmailOnOrderEvents" in-map="context" disable-authz="true"/>
        </actions>
    </seca>
</secas>